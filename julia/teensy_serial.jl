# This is basic code to get serial data from a Teensy

# TYPICAL USAGE
import Pkg;
# Pkg.add("LibSerialPort")
# Pkg.rm("LibSerialPort")
# Pkg.build("LibSerialPort")
using SerialPorts
# using Plots
#list_serialports() # show available ports

sp = SerialPort("/dev/tty.usbmodem48351501",9600) # Or whatever in Linux, Windows or Mac. //38400
    #clear buffer
while (bytesavailable(sp) > 0)
    readavailable(sp)
end

# list_ports()
println(1);

# sp = SerialPort("COM3:", 9600); # On windows try "COM4:"
write(sp,"s\n")
sleep(0.1)
write(sp,"c\n")
sleep(0.1)
write(sp,"p\n")
# write(sp, "Hello") # write a string to the port (or use a binary data type)
while bytesavailable(sp) == 0
    sleep(0.1)
end

#sleep(0.5) # Give time for a response from the micro
# sleep(8)
# println(2);
#read in signal from serial port here
BytesAvailable = bytesavailable(sp) # Number of bytes available in the buffer
println(BytesAvailable)
s = readavailable(sp)
x_original = Vector{UInt16}(s)
# v=zeros(UInt16, 12955) # Create an Uint8 array into which to read the

b = 1;
    #print("BytesAvailableAtStart: ",bytesavailable(sp))
# while (1) #divide this by 4?? 4 bytes in a float?
#     v[b] = parse(UInt16, (readline(sp)));
#     println(v[b]);
#     b = b+1;
# end
 

# s = readavailable(sp); # read from the port (s is now of type String)
# println(s);
sleep(0.1);
# s = readavailable(sp); # read from the port (s is now of type String)
# println(s);
# sleep(2);
# s = readavailable(sp); # read from the port (s is now of type String)
# println(s);
# while true
#     s = readavailable(sp); # read from the port (s is now of type String)
#     print(s);
#     sleep(1.1);
# end

# print(s)
# length(s)
# x = Vector{UInt16}(s) # Convert string to an array of Uint8 integers.

# X = fft(x)
# plot(x[1350:2100])
# print(x[1350:2100])
# plot(abs.(X))
# io = open("mytextfile.txt", "a");

# using DelimitedFiles
# writedlm("mytestfile.txt", x, ", ")

# for i = 1350:2100
#   println(x[i]);
# end
# close(io);
# import Pkg;
# Pkg.add("DelimitedFiles");
# println(x);

close(sp) # close the port
# NOTE1: The s=readavailable(sp) function reads all bytes that are currently in
# the input buffer and returns a String. To extract the bytes into an array of
# integers, use x = Vector{UInt8}(s). Converting individual string characters
# using something like Uint8(s[1]) does not work for bytes that are not in the
# standard ASCII range 0-127.
# NOTE2: If the 16-bit ADC data is sent in Big Endian format (High first,Low
# second) from the microcontroller is the PC, then to reconstruct the 16 bit ADC
# number:
# ADCvalue = x[n]*256 + x[n+1]

A = [0x8f, 0x91, 0x9b, 0x9b, 0x92, 0x90, 0x9a, 0x9b, 0x8f, 0x8f, 0x9b, 0xa0, 0x91, 0x8a, 0x98, 0xa0, 0x95, 0x89, 0x98, 0xa4, 0x93, 0x84, 0x93, 0xa9, 0x98, 0x84, 0x93, 0xa7, 0x98, 0x80, 0x92, 0xab, 0x9d, 0x81, 0x8a, 0xa7, 0xa0, 0x85, 0x8a, 0xa8, 0xa4, 0x81, 0x84, 0xa7, 0xa8, 0x88, 0x82, 0xa3, 0xa8, 0x87, 0x80, 0xa1, 0xaf, 0x8a, 0x7b, 0x9e, 0xaf, 0x8e, 0x79, 0x9e, 0xb2, 0x8e, 0x77, 0x99, 0xb4, 0x93, 0x79, 0x96, 0xb1, 0x97, 0x78, 0x92, 0xb3, 0x9b, 0x78, 0x8b, 0xb3, 0xa0, 0x78, 0x89, 0xb1, 0xa4, 0x77, 0x86, 0xb3, 0xa8, 0x7a, 0x82, 0xac, 0xab, 0x7f, 0x7f, 0xad, 0xae, 0x7e, 0x78, 0xaa, 0xb5, 0x82, 0x78, 0xa7, 0xb3, 0x83, 0x75, 0xa7, 0xb7, 0x89, 0x74, 0x9e, 0xb6, 0x8c, 0x76, 0x9d, 0xb8, 0x90, 0x70, 0x97, 0xb8, 0x97, 0x73, 0x94, 0xb7, 0x96, 0x72, 0x90, 0xba, 0x9e, 0x72, 0x8b, 0xb6, 0xa1, 0x75, 0x8a, 0xb9, 0xa3, 0x72, 0x85, 0xb6, 0xa7, 0x75, 0x84, 0xb3, 0xa8, 0x76, 0x84, 0xb4, 0xaa, 0x78, 0x7e, 0xb0, 0xae, 0x7f, 0x7c, 0xad, 0xb1, 0x7d, 0x77, 0xa9, 0xb6, 0x83, 0x76, 0xa6, 0xb3, 0x85, 0x74, 0xa7, 0xb8, 0x87, 0x72, 0xa0, 0xb8, 0x8a, 0x74, 0xa1, 0xb8, 0x8c, 0x70, 0x9c, 0xba, 0x91, 0x73, 0x98, 0xb8, 0x94, 0x72, 0x96, 0xb9, 0x99, 0x70, 0x90, 0xbb, 0x9c, 0x71, 0x8d, 0xbc, 0x9d, 0x6f, 0x8b, 0xba, 0xa2, 0x70, 0x89, 0xb7, 0xa3, 0x74, 0x85, 0xb7, 0xa7, 0x74, 0x81, 0xb6, 0xac, 0x76, 0x7f, 0xb4, 0xab, 0x77, 0x7d, 0xb3, 0xb1, 0x79, 0x79, 0xad, 0xb4, 0x7d, 0x77, 0xae, 0xb6, 0x7d, 0x71, 0xac, 0xbb, 0x81, 0x72, 0xa9, 0xb9, 0x80, 0x70, 0xa9, 0xbc, 0x87, 0x6e, 0xa1, 0xbc, 0x8a, 0x70, 0xa0, 0xbd, 0x8c, 0x6c, 0x9b, 0xbf, 0x8f, 0x6e, 0x9c, 0xbd, 0x8f, 0x6c, 0x9a, 0xbf, 0x95, 0x6d, 0x94, 0xbd, 0x98, 0x6d, 0x91, 0xbe, 0x9d, 0x6a, 0x8d, 0xbf, 0x9f, 0x6d, 0x8a, 0xbe, 0x9f, 0x6e, 0x8a, 0xbc, 0xa2, 0x6e, 0x88, 0xba, 0xa4, 0x71, 0x86, 0xbb, 0xa5, 0x70, 0x84, 0xba, 0xa9, 0x73, 0x81, 0xb6, 0xa9, 0x75, 0x80, 0xb7, 0xac, 0x76, 0x7d, 0xb1, 0xaf, 0x78, 0x7d, 0xaf, 0xb3, 0x7b, 0x76, 0xae, 0xb4, 0x7e, 0x74, 0xaa, 0xb6, 0x81, 0x75, 0xa9, 0xb7, 0x82, 0x74, 0xa5, 0xb7, 0x86, 0x74, 0xa5, 0xb6, 0x87, 0x73, 0xa3, 0xb9, 0x89, 0x73, 0xa1, 0xb7, 0x8a, 0x73, 0xa1, 0xb9, 0x8b, 0x71, 0x9b, 0xba, 0x8e, 0x72, 0x9d, 0xb9, 0x8d, 0x6e, 0x9d, 0xbb, 0x90, 0x72, 0x9a, 0xb8, 0x8d, 0x73, 0x9b, 0xba, 0x92, 0x71, 0x95, 0xb7, 0x96, 0x74, 0x97, 0xb9, 0x93, 0x6f, 0x96, 0xbb, 0x97, 0x72, 0x95, 0xb7, 0x90, 0xb6, 0x9c, 0x76, 0x90, 0xb3, 0x9a, 0x77, 0x91, 0xb5, 0x9b, 0x77, 0x8d, 0xb2, 0x9e, 0x79, 0x8f, 0xb2, 0x9c, 0x77, 0x8d, 0xb5, 0x9d, 0x79, 0x90, 0xb1, 0x99, 0x77, 0x93, 0xb3, 0x9b, 0x79, 0x8e, 0xaf, 0x9a, 0x7d, 0x91, 0xb0, 0x9b, 0x79, 0x8e, 0xae, 0x9d, 0x7f, 0x90, 0xad, 0x98, 0x7d, 0x91, 0xae, 0x9c, 0x7e, 0x90, 0xab, 0x99, 0x7f, 0x91, 0xae, 0x99, 0x7e, 0x93, 0xab, 0x98, 0x81, 0x96, 0xa9, 0x92, 0x7e, 0x97, 0xac, 0x97, 0x82, 0x94, 0xa7, 0x93, 0x86, 0x97, 0xa8, 0x94, 0x82, 0x95, 0xa5, 0x97, 0x86, 0x97, 0xa5, 0x91, 0x84, 0x99, 0xa8, 0x94, 0x85, 0x99, 0xa3, 0x91, 0x87, 0x9a, 0xa6, 0x90, 0x86, 0x9a, 0xa4, 0x90, 0x86, 0x9e, 0xa5, 0x8c, 0x85, 0x9d, 0xa5, 0x8d, 0x89, 0x9e, 0xa0, 0x8c, 0x89, 0x9f, 0xa1, 0x8d, 0x8a, 0x9d, 0xa1, 0x8c, 0x8b, 0x9f, 0xa1, 0x8b, 0x88, 0xa0, 0xa2, 0x8b, 0x8b, 0x9f, 0xa0, 0x89, 0x8c, 0xa1, 0xa0, 0x8a, 0x89, 0xa1, 0x9f, 0x8a, 0x8e, 0xa1, 0x9e, 0x87, 0x8e, 0xa3, 0x9d, 0x8a, 0x8f, 0xa2, 0x99, 0x87, 0x93, 0xa3, 0x9b, 0x89, 0x90, 0x9f, 0x97, 0x8d, 0x93, 0xa1, 0x98, 0x89, 0x92, 0xa1, 0x96, 0x8c, 0x96, 0xa0, 0x94, 0x88, 0x97, 0xa1, 0x95, 0x8d, 0x97, 0x9d, 0x91, 0x8d, 0x9a, 0x9e, 0x93, 0x8b, 0x98, 0x9e, 0x91, 0x8e, 0x9a, 0x9f, 0x8d, 0x8b, 0x9e, 0x9e, 0x8d, 0x8c, 0xa0, 0x9c, 0x8a, 0x90, 0xa0, 0x9b, 0x89, 0x90, 0xa2, 0x99, 0x8a, 0x92, 0xa4, 0x99, 0x87, 0x91, 0xa4, 0x9a, 0x87, 0x92, 0xa4, 0x96, 0x86, 0x93, 0xa6, 0x9b, 0x86, 0x91, 0xa3, 0x98, 0x87, 0x93, 0xa4, 0x9a, 0x86, 0x8f, 0xa5, 0x9a, 0x87, 0x91, 0xa7, 0x98, 0x84, 0x93, 0xa7, 0x98, 0x84, 0x96, 0xa6, 0x94, 0x86, 0x97, 0xa6, 0x94, 0x86, 0x97, 0xa3, 0x94, 0x88, 0x99, 0xa4, 0x90, 0x86, 0x99, 0xa5, 0x92, 0x87, 0x9b, 0xa0, 0x90, 0x89, 0x9c, 0xa3, 0x8f, 0x88, 0x99, 0xa3, 0x90, 0x89, 0x9d, 0xa2, 0x8d, 0x87, 0x9e, 0xa3, 0x8d, 0x8b, 0x9f, 0x9f, 0x8a, 0x8c, 0xa2, 0x9f, 0x8b, 0x8d, 0x9e, 0x9b, 0x8a, 0x92, 0xa1, 0x9b, 0x8b, 0x8e, 0x9f, 0x99, 0x8d, 0x93, 0xa0, 0x97, 0x88, 0x93, 0xa1, 0x99, 0x8c, 0x94, 0x9f, 0x94, 0x8b, 0x97, 0xa0, 0x95, 0x8b, 0x97, 0x9f, 0x93, 0x8b, 0x98, 0xa2, 0x91, 0x89, 0x99, 0xa0, 0x91, 0x8d, 0x9a, 0x9d, 0x8e, 0x8d, 0x9e, 0x9d, 0x8e]


B = [143,145,155,155,146,144,154,155,143,143,155,160,145,138,152,160,149,137,152,164,147,132,147,169,152,132,147,167,152,128,146,171,157,129,138,167,160,133,138,168,164,129,132,167,168,136,130,163,168,135,128,161,175,138,123,158,175,142,121,158,178,142,119,153,180,147,121,150,177,151,120,146,179,155,120,139,179,160,120,137,177,164,119,134,179,168,122,130,172,171,127,127,173,174,126,120,170,181,130,120,167,179,131,117,167,183,137,116,158,182,140,118,157,184,144,112,151,184,151,115,148,183,150,114,144,186,158,114,139,182,161,117,138,185,163,114,133,182,167,117,132,179,168,118,132,180,170,120,126,176,174,127,124,173,177,125,119,169,182,131,118,166,179,133,116,167,184,135,114,160,184,138,116,161,184,140,112,156,186,145,115,152,184,148,114,150,185,153,112,144,187,156,113,141,188,157,111,139,186,162,112,137,183,163,116,133,183,167,116,129,182,172,118,127,180,171,119,125,179,177,121,121,173,180,125,119,174,182,125,113,172,187,129,114,169,185,128,112,169,188,135,110,161,188,138,112,160,189,140,108,155,191,143,110,156,189,143,108,154,191,149,109,148,189,152,109,145,190,157,106,141,191,159,109,138,190,159,110,138,188,162,110,136,186,164,113,134,187,165,112,132,186,169,115,129,182,169,117,128,183,172,118,125,177,175,120,125,175,179,123,118,174,180,126,116,170,182,129,117,169,183,130,116,165,183,134,116,165,182,135,115,163,185,137,115,161,183,138,115,161,185,139,113,155,186,142,114,157,185,141,110,157,187,144,114,154,184,141,115,155,186,146,113,149,183,150,116,151,185,147,111,150,187,151,114,149,183,148,114,148,187,152,114,145,183,152,114,149,185,152,113,145,185,153,117,147,182,152,116,146,183,155,118,143,180,155,119,144,180,156,116,144,182,156,118,144,179,154,119,145,181,155,119,141,178,158,121,143,178,156,119,141,181,157,121,144,177,153,119,147,179,155,121,142,175,154,125,145,176,155,121,142,174,157,127,144,173,152,125,145,174,156,126,144,171,153,127,145,174,153,126,147,171,152,129,150,169,146,126,151,172,151,130,148,167,147,134,151,168,148,130,149,165,151,134,151,165,145,132,153,168,148,133,153,163,145,135,154,166,144,134,154,164,144,134,158,165,140,133,157,165,141,137,158,160,140,137,159,161,141,138,157,161,140,139,159,161,139,136,160,162,139,139,159,160,137,140,161,160,138,137,161,159,138,142,161,158,135,142,163,157,138,143,162,153,135,147,163,155,137,144,159,151,141,147,161,152,137,146,161,150,140,150,160,148,136,151,161,149,141,151,157,145,141,154,158,147,139,152,158,145,142,154,159,141,139,158,158,141,140,160,156,138,144,160,155,137,144,162,153,138,146,164,153,135,145,164,154,135,146,164,150,134,147,166,155,134,145,163,152,135,147,164,154,134,143,165,154,135,145,167,152,132,147,167,152,132,150,166,148,134,151,166,148,134,151,163,148,136,153,164,144,134,153,165,146,135,155,160,144,137,156,163,143,136,153,163,144,137,157,162,141,135,158,163,141,139,159,159,138,140,162,159,139,141,158,155,138,146,161,155,139,142,159,153,141,147,160,151,136,147,161,153,140,148,159,148,139,151,160,149,139,151,159,147,139,152,162,145,137,160,145,141,154,157,142,141,158,157,142]

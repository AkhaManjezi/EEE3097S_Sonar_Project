# This is basic code to get serial data from a Teensy

# TYPICAL USAGE
# import Pkg;
# Pkg.add("SerialPorts")
# Pkg.rm("SerialPorts")
using SerialPorts
#list_serialports() # show available ports
sp = SerialPort("COM3:", 115200); # On windows try "COM4:"
# write(sp, "Hello") # write a string to the port (or use a binary data type)
while bytesavailable(sp) == 0
    sleep(0.1)
end
s = readavailable(sp); # read from the port (s is now of type String)
# println(s);
sleep(0.1);
# s = readavailable(sp); # read from the port (s is now of type String)
# println(s);
# sleep(2);
# s = readavailable(sp); # read from the port (s is now of type String)
# println(s);
# while true
#     s = readavailable(sp); # read from the port (s is now of type String)
#     print(s);
#     sleep(1.1);
# end

x = Vector{UInt8}(s) # Convert string to an array of Uint8 integers.
# io = open("mytextfile.txt", "a");

# using DelimitedFiles
# writedlm("mytestfile.txt", x, ", ")

# for i = 1:length(x)
#   println(x[i]);
# end
# close(io);
# import Pkg;
# Pkg.add("DelimitedFiles");
# println(x);

close(sp) # close the port
# NOTE1: The s=readavailable(sp) function reads all bytes that are currently in
# the input buffer and returns a String. To extract the bytes into an array of
# integers, use x = Vector{UInt8}(s). Converting individual string characters
# using something like Uint8(s[1]) does not work for bytes that are not in the
# standard ASCII range 0-127.
# NOTE2: If the 16-bit ADC data is sent in Big Endian format (High first,Low
# second) from the microcontroller is the PC, then to reconstruct the 16 bit ADC
# number:
# ADCvalue = x[n]*256 + x[n+1]
